import networkx as nx
import tkinter as tk
import sys
import matplotlib
from collections import OrderedDict


matplotlib.use("TkAgg")
import numpy as np
import matplotlib.pyplot as plt
from matplotlib.backends.backend_tkagg import FigureCanvasTkAgg
from matplotlib.figure import Figure

listy = []
G = nx.Graph()
window = tk.Tk()
window.title("Node Colouring")
l1 = tk.Label(window, text="Please enter your input and choose colors to design your node graph",
              font=("Helvetica", 15))
l1.pack()
txt = tk.Text(width=80, height=20, )
txt.pack()
colorList = []




def read():
    del_num = 1
    added_node = 0
    text = txt.get('1.0', tk.END).splitlines()
    for line in text:
        for x in line:
            char = x.split()
            listy.append(char)

        del listy[del_num]
        del listy[del_num]
        del_num += 2

        leftnode = str(listy[added_node])
        rightnode = str(listy[added_node + 1])

        G.add_node(leftnode)
        G.add_node(rightnode)

        G.add_edge(leftnode, rightnode)
        added_node += 2


    node_dict = dict()
    node_listy = G.nodes()
    print("These are the nodes: ")
    print(node_listy)






    node_count = len(G.nodes)
    print(node_count)

    degree_list = []
    degree_dict= dict()
    descending_dict =dict()

    another_nodeList = []

    for i in node_listy:
        d = G.degree(i)
        print("Degree of the node ",i , "is :" , d)

        another_nodeList.append(i)

        degree_list.append(d)
        degree_dict[i] = d

    for i in range(node_count):
        node_dict[another_nodeList[i]] = i

    print("This is the all nodes dictionary")
    print(node_dict)


    print("This is the degrees of the nodes (unordered)")
    print(degree_dict)

    descending_list = []

    #trying a little algorithm to sort the dictionary
    degree_dict_sorted_keys = sorted(degree_dict, key=degree_dict.get, reverse=True)
    for r in degree_dict_sorted_keys:
        print(r, degree_dict[r])
        descending_list.append(r)
        descending_dict[r] = degree_dict[r]


    print("This is the dictionary in descending order: ")
    print(descending_dict)

    print("This is the LIST in descending order: ")
    print(descending_list)

    for node in node_listy:
        neighbor_listy = list(G.neighbors(node))
        print("neighbors of ", node, "is: ")
        print(neighbor_listy)


    colorList2= []
    colorList3 = []
    colorList4 = []
    colorList5 = []
    colorList6 = []
    colorList7 = []
    colorList8 = []
    colorList9 = []
    colorList10 = []
    colorList11 = []
    colorList12 = []
    if rdVar.get() == 1:
        colorList.append("red")
        colorList2.append("red")
        colorList3.append("red")
        colorList4.append("red")
        colorList5.append("red")
        colorList6.append("red")
        colorList7.append("red")
        colorList8.append("red")
        colorList9.append("red")
        colorList10.append("red")
        colorList11.append("red")
        colorList12.append("red")

    if olvVar.get() == 1:
        colorList.append("olive")
        colorList2.append("olive")
        colorList3.append("olive")
        colorList4.append("olive")
        colorList5.append("olive")
        colorList6.append("olive")
        colorList7.append("olive")
        colorList8.append("olive")
        colorList9.append("olive")
        colorList10.append("olive")
        colorList11.append("olive")
        colorList12.append("olive")
    if bluVar.get() == 1:
        colorList.append("blue")
        colorList2.append("blue")
        colorList3.append("blue")
        colorList4.append("blue")
        colorList5.append("blue")
        colorList6.append("blue")
        colorList7.append("blue")
        colorList8.append("blue")
        colorList9.append("blue")
        colorList10.append("blue")
        colorList11.append("blue")
        colorList12.append("blue")
    if grnVar.get() == 1:
        colorList.append("green")
        colorList2.append("green")
        colorList3.append("green")
        colorList4.append("green")
        colorList5.append("green")
        colorList6.append("green")
        colorList7.append("green")
        colorList8.append("green")
        colorList9.append("green")
        colorList10.append("green")
        colorList11.append("green")
        colorList12.append("green")
    if ylwVar.get() == 1:
        colorList.append("yellow")
        colorList2.append("yellow")
        colorList3.append("yellow")
        colorList4.append("yellow")
        colorList5.append("yellow")
        colorList6.append("yellow")
        colorList7.append("yellow")
        colorList8.append("yellow")
        colorList9.append("yellow")
        colorList10.append("yellow")
        colorList11.append("yellow")
        colorList12.append("yellow")
    if prpVar.get() == 1:
        colorList.append("purple")
        colorList2.append("purple")
        colorList3.append("purple")
        colorList4.append("purple")
        colorList5.append("purple")
        colorList6.append("purple")
        colorList7.append("purple")
        colorList8.append("purple")
        colorList9.append("purple")
        colorList10.append("purple")
        colorList11.append("purple")
        colorList12.append("purple")
    if brwVar.get() == 1:
        colorList.append("brown")
        colorList2.append("brown")
        colorList3.append("brown")
        colorList4.append("brown")
        colorList5.append("brown")
        colorList6.append("brown")
        colorList7.append("brown")
        colorList8.append("brown")
        colorList9.append("brown")
        colorList10.append("brown")
        colorList11.append("brown")
        colorList12.append("brown")
    if orgVar.get() == 1:
        colorList.append("orange")
        colorList2.append("orange")
        colorList3.append("orange")
        colorList4.append("orange")
        colorList5.append("orange")
        colorList6.append("orange")
        colorList7.append("orange")
        colorList8.append("orange")
        colorList9.append("orange")
        colorList10.append("orange")
        colorList11.append("orange")
        colorList12.append("orange")
    print(colorList)

    listelerlist = []




    listelerlist.append(colorList)
    listelerlist.append(colorList2)
    listelerlist.append(colorList3)
    listelerlist.append(colorList4)
    listelerlist.append(colorList5)
    listelerlist.append(colorList6)
    listelerlist.append(colorList7)
    listelerlist.append(colorList8)
    listelerlist.append(colorList9)
    listelerlist.append(colorList10)
    listelerlist.append(colorList11)
    listelerlist.append(colorList12)


    print("This is listelerlist")
    print(listelerlist)



    print("ya işte 0 0 ı sildik")
    print(listelerlist)






    print("******")
    print(listy)
    print(G.nodes)
    options = {
        "font_size": 21,
        "node_size": 1500,
        "node_color": "purple",
        "edgecolors": "black",
        "linewidths": 5,
        "width": 5,
    }

    renkpaleti = dict()

    ardaben = ['red', 'blue', 'green', 'yellow','brown',]

    for i in range(node_count):
        renkpaleti[another_nodeList[i]]= listelerlist[i]

    print(renkpaleti)


    #The Main Partt
    theSolution = dict()
    lastDict = dict()
    lastList = []


    for n in descending_list:
        setColor = renkpaleti[n]
        print("i am setcolor")
        print(setColor)
        print("i am setcolor 0 ")
        print(setColor[0])
        print("")
        print("i am colordict")
        print(renkpaleti)
        print("")
        print("")
        print("heyo")
        print(setColor)
        print("byee")
        theSolution[n] = setColor[0]
        print(type(setColor))
        print(type(theSolution))
        for letter in G.neighbors(n):
            print("serra")
            if(setColor[0] in renkpaleti[letter]):
                print("serus")
                renkpaleti[letter].remove(setColor[0])



    for t, w in sorted(theSolution.items()):
        print("Node", t, " = ", w)
        lastDict[t]=w
        lastList.append(w)



    print("This is the last dict")
    print(lastDict)
    print("This is the last list")
    print(lastList)




    nx.draw_networkx(G, node_color = lastList)
    ax = plt.gca()
    ax.margins(0.20)
    plt.axis("off")
    plt.show()


button1 = tk.Button(window, text="DESIGN GRAPH", width=20, command=read, font=("Helvetica", 15))
button1.pack()
rdVar = tk.IntVar()
olvVar = tk.IntVar()
bluVar = tk.IntVar()
grnVar = tk.IntVar()
ylwVar = tk.IntVar()
prpVar = tk.IntVar()
brwVar = tk.IntVar()
orgVar = tk.IntVar()
rd = tk.Checkbutton(window, text="red", variable=rdVar, height=2, width=10, selectcolor="red")
olv = tk.Checkbutton(window, text="olive", variable=olvVar, height=2, width=10, selectcolor="olive")
blu = tk.Checkbutton(window, text="blue", variable=bluVar, height=2, width=10, selectcolor="blue")
grn = tk.Checkbutton(window, text="green", variable=grnVar, height=2, width=10, selectcolor="green")
ylw = tk.Checkbutton(window, text="yellow", variable=ylwVar, height=2, width=10, selectcolor="yellow")
prp = tk.Checkbutton(window, text="purple", variable=prpVar, height=2, width=10, selectcolor="purple")
brw = tk.Checkbutton(window, text="brown", variable=brwVar, height=2, width=10, selectcolor="brown")
org = tk.Checkbutton(window, text="orange", variable=orgVar, height=2, width=10, selectcolor="orange")
rd.pack()
olv.pack()
blu.pack()
grn.pack()
ylw.pack()
prp.pack()
brw.pack()
org.pack()
plt.show()

window.mainloop()

# G.add_edge("A","B")
# G.add_edge("B","C")
# G.add_edge("D","A")
# G.add_edge("D","B")
# nx.draw_networkx(G, **options)


